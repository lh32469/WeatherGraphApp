# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master,pipeline ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Substitute Secrets
        run: |
          sed -e 's/KUBE_SERVER/${{ secrets.KUBE_SERVER }}/g' kube_config > config.1
          sed -e 's/KUBE_TOKEN/${{ secrets.KUBE_TOKEN }}/g' config.1 > k_config
          cat k_config

      - name: Display Config
        run: cat k_config

      - name: Set Kubernetes Cluster
        env:
          KUBECONFIG: ./k_config
        run: kubectl get pods -A

      - name: Maven Compile
        run: mvn -B compile

      - name: Maven Package
        run: mvn -B package

      - name: Docker Build
        env:
          BRANCH: ${GITHUB_REF##*/}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: docker build -t lh32469/weather-${GITHUB_REF##*/}:${GITHUB_RUN_NUMBER} .

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Push image to Docker Hub
        run: docker push lh32469/weather-${GITHUB_REF##*/}:${GITHUB_RUN_NUMBER}

      - name: Check existing Kubernetes Deployment
        id: deployment_check
        env:
          KUBECONFIG: ./k_config
        run: kubectl get deployment/weather
        continue-on-error: true

      - name: Create new Kubernetes Deployment
        if: job.steps.deployment_check.status == success()
        env:
          KUBECONFIG: ./k_config
        run: echo Deploytment does not exist

      - name: Deploy new image to Kubernetes
        env:
          KUBECONFIG: ./k_config
        run: kubectl set image deployment/weather weather=lh32469/weather-${GITHUB_REF##*/}:${GITHUB_RUN_NUMBER}

  env:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Print Environment Variables
        run: env
      - name: List Directory
        env:
          BRANCH: ${GITHUB_REF##*/}
        run: ls -l
      - name: Print Branch Name
        env:
          BRANCH: ${GITHUB_REF##*/}
        run: echo BRANCH=${BRANCH}
